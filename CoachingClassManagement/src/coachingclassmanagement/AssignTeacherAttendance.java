/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coachingclassmanagement;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author yogesh
 */
public class AssignTeacherAttendance extends javax.swing.JFrame {

    /**
     * Creates new form AssignTeacherAttendance
     */
    Connection con=null;
    PreparedStatement pstmt=null;
    ResultSet rs=null;

    public AssignTeacherAttendance() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Date :");

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton2.setText("Save ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 396, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      try {
            Class.forName("com.mysql.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/demo?useSSL=false";
            String username="root";
            String password="YOGESH";
            con=DriverManager.getConnection(url,username,password);
            System.out.println("connection established");
             String d1  = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
           
            String sql= "select l.time,l.date,l.class,s.subject_name as lecture,concat(t.first_name,' ',t.last_name ) as teacher_name\n" +
"from lectures1.class l join subjects1.classvi s on l.subject_id = s.id \n" +
"join teacher1.teacher_info t on l.teacher_id= t.id\n" +
"where l.date=? and class=\"Class VI\" \n" +
"union\n" +
"select l.time,l.date,l.class,s.subject_name as lecture,concat(t.first_name,' ',t.last_name ) as teacher_name\n" +
"from lectures1.class l join subjects1.classvii s on l.subject_id = s.id \n" +
"join teacher1.teacher_info t on l.teacher_id= t.id\n" +
"where l.date=? and class=\"Class VII\" \n" +
"union\n" +
"select l.time,l.date,l.class,s.subject_name as lecture,concat(t.first_name,' ',t.last_name ) as teacher_name\n" +
"from lectures1.class l join subjects1.classviii s on l.subject_id = s.id \n" +
"join teacher1.teacher_info t on l.teacher_id= t.id\n" +
"where l.date=? and class=\"Class VIII\"  \n" +
"union\n" +
"select l.time,l.date,l.class,s.subject_name as lecture,concat(t.first_name,' ',t.last_name ) as teacher_name\n" +
"from lectures1.class l join subjects1.classix s on l.subject_id = s.id \n" +
"join teacher1.teacher_info t on l.teacher_id= t.id\n" +
"where l.date=? and class=\"Class IX\" \n" +
"union\n" +
"select l.time,l.date,l.class,s.subject_name as lecture,concat(t.first_name,' ',t.last_name ) as teacher_name\n" +
"from lectures1.class l join subjects1.classx s on l.subject_id = s.id \n" +
"join teacher1.teacher_info t on l.teacher_id= t.id\n" +
"where l.date=? and class=\"Class X\" \n" +
"union\n" +
"select l.time,l.date,l.class,s.subject_name as lecture,concat(t.first_name,' ',t.last_name ) as teacher_name\n" +
"from lectures1.class l join subjects1.classxi s on l.subject_id = s.id \n" +
"join teacher1.teacher_info t on l.teacher_id= t.id\n" +
"where l.date=? and class=\"Class XI\"  \n" +
"union\n" +
"select l.time,l.date,l.class,s.subject_name as lecture,concat(t.first_name,' ',t.last_name ) as teacher_name\n" +
"from lectures1.class l join subjects1.classxii s on l.subject_id = s.id \n" +
"join teacher1.teacher_info t on l.teacher_id= t.id\n" +
"where l.date=? and class=\"Class XII\""
                    + "order by time \n";
             pstmt=con.prepareStatement(sql);
             pstmt.setString(1, d1);
             pstmt.setString(2, d1);
pstmt.setString(3, d1);
pstmt.setString(4, d1);
pstmt.setString(5, d1);
pstmt.setString(6, d1);
pstmt.setString(7, d1);

                   rs= pstmt.executeQuery();
                   
                   TableModel utilsModel = DbUtils.resultSetToTableModel(rs);
                    TableModel wrapperModel = new AssignTeacherAttendance.CheckBoxWrapperTableModel(utilsModel, "Select");
                    jTable1.setModel( wrapperModel );
                   
      } catch (ClassNotFoundException ex) {
            Logger.getLogger(AssignTeacherAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AssignTeacherAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
           
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
          try {
            // TODO add your handling code here:
            int rows=jTable1.getRowCount();
            Class.forName("com.mysql.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/demo?useSSL=false";
            String username="root";
            String password="YOGESH";
            con=DriverManager.getConnection(url,username,password);
            System.out.println("connection established");
            String d1  = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
               
                    String sql = "insert into teacher1.teacher_attendance(teacher_id,status,date)"
                            + "values((select id from teacher1.teacher_info where concat(first_name,' ',last_name )=?),?,?)";
                    pstmt=con.prepareStatement(sql);
             con.setAutoCommit(false);
            for(int i=0;i<rows;i++)
            {
                String tid =(String)jTable1.getValueAt(i, 5) ;
                System.out.println(tid);
                Boolean status=(Boolean)jTable1.getValueAt(i, 0);
                System.out.println(status);
                pstmt.setString(1, tid);
                pstmt.setBoolean(2, status);
                pstmt.setString(3, ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText());
                pstmt.addBatch();
                
            }        
            pstmt.executeBatch();
            con.commit();
              
          } catch (ClassNotFoundException ex) {
            Logger.getLogger(AssignTeacherAttendance.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AssignTeacherAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
          
          try {
            pstmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(addattendance.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(addattendance.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    public class CheckBoxWrapperTableModel extends AbstractTableModel{

        private Map<Integer, Boolean> checkBoxes = new HashMap<Integer, Boolean>();

    private TableModel model;
    private String columnName;

    public CheckBoxWrapperTableModel(TableModel model, String columnName)
    {
        this.model = model;
        this.columnName = columnName;
    }

        public String getColumnName(int col)
    {
            
        return (col > 0) ? model.getColumnName(col - 1) : columnName;
    }
        @Override
        public int getRowCount() {
           return model.getRowCount();
        }

        @Override
        public int getColumnCount() {
        return model.getColumnCount() + 1;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            if (columnIndex > 0)
            return model.getValueAt(rowIndex, columnIndex - 1);
        else
        {
            Object value = checkBoxes.get(rowIndex);
            return (value == null) ? Boolean.TRUE : value;
        }
            
            
        }
         public boolean isCellEditable(int row, int col)
    {
        if (col > 0)
            return model.isCellEditable(row, col - 1);
        else
            return true;
    }
         
         public void setValueAt(Object value, int row, int col)
    {
        if (col > 0)
            model.setValueAt(value, row, col - 1);
        else
            checkBoxes.put(row, (Boolean) value);

        fireTableCellUpdated(row, col);
    }

         public Class getColumnClass(int col)
    {
        return (col > 0) ? model.getColumnClass(col - 1) : Boolean.class;
    }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AssignTeacherAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssignTeacherAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AssignTeacherAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AssignTeacherAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AssignTeacherAttendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
